{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","toUTCString","slice","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","handlerRightClick","event","preventDefault","handlerLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MASaA,EAAb,4MACEC,MAAyB,CACvBC,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFhD,EAKEC,QAAyB,KAL3B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAER,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAE5DM,QAAQC,KAAK,EAAKX,MAAMC,SACvB,OAZP,gCAeE,SAAmBW,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAlBzE,kCAsBE,WACMP,KAAKD,SACPE,OAAOS,cAAcV,KAAKD,WAxBhC,oBA4BE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAZ,EAAUK,KAAKN,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,WAzCX,GAA2BiB,aCA3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAGX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBa,UAAW,UACXW,UAAU,GAHd,EAMEnB,QAAyB,KAN3B,EAwBEoB,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKlB,SAAS,CAAEe,UAAU,KA1B9B,EA6BEI,iBAAmB,WACjB,EAAKnB,SAAS,CAAEe,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAexB,KAAKmB,mBAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,kBACxCtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,QAbP,kCAgBE,WACEU,SAASE,oBAAoB,cAAezB,KAAKmB,mBACjDI,SAASE,oBAAoB,QAASzB,KAAKsB,kBACvCtB,KAAKD,SACPE,OAAOS,cAAcV,KAAKD,WApBhC,oBAiCE,WACE,MAAgCC,KAAKN,MAA7BwB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAvCvC,GAAyBK,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.f617b0ee.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface State {\n  today: string;\n}\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date().toUTCString().slice(-12, -4) });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n    // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handlerRightClick);\n    document.addEventListener('click', this.handlerLeftClick);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handlerRightClick);\n    document.removeEventListener('click', this.handlerLeftClick);\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  handlerRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handlerLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}